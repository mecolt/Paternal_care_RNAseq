# 1. Indexed rna.fna file from NCBI using Kallisto (see script below).  

#!/bin/bash
#SBATCH --job-name=Kallisto_index
#SBATCH --nodes=1
#SBATCH --time=168:00:00
#SBATCH --mem-per-cpu=100000
#SBATCH --cpus-per-task=1
#SBATCH --mail-type=BEGIN,END

cd /scratch/zt1/project/fisher-lab/shared/HPC_trimmed_Fastq.gz/Trimmomatic_trimmed/Kallisto

/scratch/zt1/project/fisher-lab/shared/HPC_trimmed_Fastq.gz/Trimmomatic_trimmed/Kallisto/kallisto/kallisto index --index=Pcal_kallisto_index_GCF GCF_007827085.1_ASM782708v3_rna.fasta

# 2. Pseudoaligned reads from each fastq file to indexed transcriptome using Kallisto (see one example script below). 

#!/bin/bash
#SBATCH --job-name=Kallisto_2
#SBATCH --nodes=1
#SBATCH --time=168:00:00
#SBATCH --mem=100000
#SBATCH --mail-type=BEGIN,END

cd /scratch/zt1/project/fisher-lab/shared/HPC_trimmed_Fastq.gz/Trimmomatic_trimmed/Kallisto

/scratch/zt1/project/fisher-lab/shared/HPC_trimmed_Fastq.gz/Trimmomatic_trimmed/Kallisto/kallisto/kallisto quant --index=Pcal_kallisto_index_GCF --output-dir=IL63-A10_2_quant.output IL63-A10_2_R1_trimmed2.fastq IL63-A10_2_R2_trimmed2.fastq

# 3. Ran HBA-DEALS simulation in R in Zaratan by uploading R script (called ‘HBA_DEALS_sim.R’) and running sbatch script (called ‘R_script.sh’; see scripts below). 

# 'HBA_DEALS_sim.R' 
library(hbadeals)
simulate(rseed=1,fc=2,equal = TRUE)
n.samples=4
countsData=read.table('counts.txt',sep='\t',header=F)
labels=c(rep(1,n.samples),rep(2,n.samples))
res=hbadeals(countsData,labels,parallel::detectCores(),mtc=TRUE)
saveRDS(res, "res.rds")

# 'R_script.sh' 
#!/bin/bash
#Request 10 hours
#SBATCH -t 10:00:00
#Request 100 GiB per CPU-core
#SBATCH --mem-per-cpu=100096
#Request 5 cores
#SBATCH -n 5

#Load required modules
module load r

#Make sure OpenMP is not "on"
OMP_NUM_THREADS=1
export OMP_NUM_THREADS

# make changes to R script before submission
export R_LIBS='/scratch/zt1/project/fisher-lab/shared/HPC_trimmed_Fastq.gz/Trimmomatic_trimmed/HBA_DEALS/R_LIBS'
Rscript --no-save --no-restore /scratch/zt1/project/fisher-lab/shared/HPC_trimmed_Fastq.gz/Trimmomatic_trimmed/HBA_DEALS/HBA_DEALS_sim.R

# 4. Created dataframes with geneID, variantID, and Kallisto counts, and removed genes with only a single transcript. Used those files (example here father vs. non-father comparison called ‘combined_tpm_variant_f_nf_ordered_nosingles.tsv’) in running HBA-DEALS with Kallisto reads. See example scripts below: 

# 'HBA_DEALS_f_nf.R'
library(hbadeals)
combined_tpm_variant_f_nf_ordered_nosingles=read.table('/scratch/zt1/project/fisher-lab/shared/HPC_trimmed_Fastq.gz/Trimmomatic_trimmed/HBA_DEALS/combined_tpm_variant_f_nf_ordered_nosingles.tsv',sep='\t',header=T)
labels=c(1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2)
res_f_nf=hbadeals(combined_tpm_variant_f_nf_ordered_nosingles,labels,parallel::detectCores(),mtc=TRUE)
saveRDS(res_f_nf, "res_f_nf.rds")

# 'R_script_f_nf.sh'
#!/bin/bash
#Request 10 hours
#SBATCH -t 10:00:00
#Request 100 GiB per CPU-core
#SBATCH --mem-per-cpu=100096
#Request 5 cores
#SBATCH -n 5

#Load required modules
module load r

#Make sure OpenMP is not "on"
OMP_NUM_THREADS=1
export OMP_NUM_THREADS

# make changes to R script before submission
export R_LIBS='/scratch/zt1/project/fisher-lab/shared/HPC_trimmed_Fastq.gz/Trimmomatic_trimmed/HBA_DEALS/R_LIBS'
Rscript --no-save --no-restore /scratch/zt1/project/fisher-lab/shared/HPC_trimmed_Fastq.gz/Trimmomatic_trimmed/HBA_DEALS/HBA_DEALS_f_nf.R